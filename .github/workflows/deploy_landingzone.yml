name: 'DeployLandingZone'

on:
  push:
    branches:
      - feature_fix
      - prod
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref == 'refs/heads/feature_fix' && 'production' || 'default' }}

    env: # Set the environment variables for the whole job
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
    - uses: actions/checkout@v4

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3.0.0
      with:
        terraform_version: 1.1.0

    - name: 'Set TF_VARS_PATH and TF_BACKEND_CONFIG_PATH'
      run: |
        if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
          TF_VARS_PATH="environments/dev.tfvars"
          TF_BACKEND_CONFIG_PATH="environments/backend-dev.hcl" 
        elif [ "${{ github.ref }}" == "refs/heads/test" ]; then
          TF_VARS_PATH="environments/test.tfvars"
          TF_BACKEND_CONFIG_PATH="environments/backend-test.hcl"
        elif [ "${{ github.ref }}" == "refs/heads/feature_fix" ]; then
          TF_VARS_PATH="environments/prod.tfvars"
          TF_BACKEND_CONFIG_PATH="environments/backend-prod.hcl"
        fi
        echo TF_VARS_PATH=$TF_VARS_PATH >> $GITHUB_ENV
        echo TF_BACKEND_CONFIG_PATH=$TF_BACKEND_CONFIG_PATH >> $GITHUB_ENV

    - name: 'Terraform Init'
      run: terraform init -backend-config="${{ env.TF_BACKEND_CONFIG_PATH }}"

    - name: 'Terraform Plan'
      run: terraform plan -var-file="${{ env.TF_VARS_PATH }}"

    - name: 'Terraform Apply'
      run: terraform apply -var-file="${{ env.TF_VARS_PATH }}" -auto-approve